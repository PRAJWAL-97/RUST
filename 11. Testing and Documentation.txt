11. Testing and Documentation

Writing Unit Tests with #[test]:
Rust has a built-in testing framework. You can write unit tests by annotating functions with #[test].
 
fn add(a: i32, b: i32) -> i32 {
    a + b
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_add() {
        assert_eq!(add(2, 3), 5);
    }
}


Generating Documentation with rustdoc:
Rust has a documentation generator called rustdoc that can generate documentation from your code comments.
 
/// Adds two numbers and returns the result.
///
/// # Examples
///
/// ```
/// let result = add(2, 3);
/// assert_eq!(result, 5);
/// ```
fn add(a: i32, b: i32) -> i32 {
    a + b
}